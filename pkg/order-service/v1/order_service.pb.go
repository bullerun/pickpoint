// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.12.4
// source: order-service/v1/order_service.proto

package order_service

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrderCreateDate  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=order_create_date,json=orderCreateDate,proto3" json:"order_create_date,omitempty"`
	ExpiryDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	AcceptDate       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=accept_date,json=acceptDate,proto3" json:"accept_date,omitempty"`
	ReturnFromClient *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=return_from_client,json=returnFromClient,proto3" json:"return_from_client,omitempty"`
	ReturnToCourier  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=return_to_courier,json=returnToCourier,proto3" json:"return_to_courier,omitempty"`
	Packaging        string                 `protobuf:"bytes,8,opt,name=packaging,proto3" json:"packaging,omitempty"`
	Weigh            float32                `protobuf:"fixed32,9,opt,name=weigh,proto3" json:"weigh,omitempty"`
	Cost             float32                `protobuf:"fixed32,10,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Order) GetOrderCreateDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OrderCreateDate
	}
	return nil
}

func (x *Order) GetExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDate
	}
	return nil
}

func (x *Order) GetAcceptDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AcceptDate
	}
	return nil
}

func (x *Order) GetReturnFromClient() *timestamppb.Timestamp {
	if x != nil {
		return x.ReturnFromClient
	}
	return nil
}

func (x *Order) GetReturnToCourier() *timestamppb.Timestamp {
	if x != nil {
		return x.ReturnToCourier
	}
	return nil
}

func (x *Order) GetPackaging() string {
	if x != nil {
		return x.Packaging
	}
	return ""
}

func (x *Order) GetWeigh() float32 {
	if x != nil {
		return x.Weigh
	}
	return 0
}

func (x *Order) GetCost() float32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

type AddOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    int64   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ShelfLife int64   `protobuf:"varint,3,opt,name=shelf_life,json=shelfLife,proto3" json:"shelf_life,omitempty"`
	Packaging string  `protobuf:"bytes,4,opt,name=packaging,proto3" json:"packaging,omitempty"`
	Weigh     float32 `protobuf:"fixed32,5,opt,name=weigh,proto3" json:"weigh,omitempty"`
	Cost      float32 `protobuf:"fixed32,6,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *AddOrderRequest) Reset() {
	*x = AddOrderRequest{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderRequest) ProtoMessage() {}

func (x *AddOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderRequest.ProtoReflect.Descriptor instead.
func (*AddOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddOrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrderRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddOrderRequest) GetShelfLife() int64 {
	if x != nil {
		return x.ShelfLife
	}
	return 0
}

func (x *AddOrderRequest) GetPackaging() string {
	if x != nil {
		return x.Packaging
	}
	return ""
}

func (x *AddOrderRequest) GetWeigh() float32 {
	if x != nil {
		return x.Weigh
	}
	return 0
}

func (x *AddOrderRequest) GetCost() float32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

type AddOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddOrderResponse) Reset() {
	*x = AddOrderResponse{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderResponse) ProtoMessage() {}

func (x *AddOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderResponse.ProtoReflect.Descriptor instead.
func (*AddOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{2}
}

type ListOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *ListOrdersResponse) Reset() {
	*x = ListOrdersResponse{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrdersResponse) ProtoMessage() {}

func (x *ListOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrdersResponse.ProtoReflect.Descriptor instead.
func (*ListOrdersResponse) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListOrdersResponse) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type ListOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InTheDeliveryPoint bool  `protobuf:"varint,2,opt,name=in_the_delivery_point,json=inTheDeliveryPoint,proto3" json:"in_the_delivery_point,omitempty"`
	Latest             int64 `protobuf:"varint,3,opt,name=latest,proto3" json:"latest,omitempty"`
}

func (x *ListOrdersRequest) Reset() {
	*x = ListOrdersRequest{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrdersRequest) ProtoMessage() {}

func (x *ListOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrdersRequest.ProtoReflect.Descriptor instead.
func (*ListOrdersRequest) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListOrdersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListOrdersRequest) GetInTheDeliveryPoint() bool {
	if x != nil {
		return x.InTheDeliveryPoint
	}
	return false
}

func (x *ListOrdersRequest) GetLatest() int64 {
	if x != nil {
		return x.Latest
	}
	return 0
}

type UpdateIssuedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderIds []string `protobuf:"bytes,1,rep,name=order_ids,json=orderIds,proto3" json:"order_ids,omitempty"`
}

func (x *UpdateIssuedRequest) Reset() {
	*x = UpdateIssuedRequest{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIssuedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIssuedRequest) ProtoMessage() {}

func (x *UpdateIssuedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIssuedRequest.ProtoReflect.Descriptor instead.
func (*UpdateIssuedRequest) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateIssuedRequest) GetOrderIds() []string {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

type UpdateIssuedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateIssuedResponse) Reset() {
	*x = UpdateIssuedResponse{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIssuedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIssuedResponse) ProtoMessage() {}

func (x *UpdateIssuedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIssuedResponse.ProtoReflect.Descriptor instead.
func (*UpdateIssuedResponse) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{6}
}

type ReturnOrderToCourierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *ReturnOrderToCourierRequest) Reset() {
	*x = ReturnOrderToCourierRequest{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnOrderToCourierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnOrderToCourierRequest) ProtoMessage() {}

func (x *ReturnOrderToCourierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnOrderToCourierRequest.ProtoReflect.Descriptor instead.
func (*ReturnOrderToCourierRequest) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{7}
}

func (x *ReturnOrderToCourierRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type ReturnOrderToCourierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReturnOrderToCourierResponse) Reset() {
	*x = ReturnOrderToCourierResponse{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnOrderToCourierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnOrderToCourierResponse) ProtoMessage() {}

func (x *ReturnOrderToCourierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnOrderToCourierResponse.ProtoReflect.Descriptor instead.
func (*ReturnOrderToCourierResponse) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{8}
}

type AcceptReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrderId int64 `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *AcceptReturnRequest) Reset() {
	*x = AcceptReturnRequest{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptReturnRequest) ProtoMessage() {}

func (x *AcceptReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptReturnRequest.ProtoReflect.Descriptor instead.
func (*AcceptReturnRequest) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{9}
}

func (x *AcceptReturnRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AcceptReturnRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type AcceptReturnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptReturnResponse) Reset() {
	*x = AcceptReturnResponse{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptReturnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptReturnResponse) ProtoMessage() {}

func (x *AcceptReturnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptReturnResponse.ProtoReflect.Descriptor instead.
func (*AcceptReturnResponse) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{10}
}

type GetReturnedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetReturnedRequest) Reset() {
	*x = GetReturnedRequest{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReturnedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReturnedRequest) ProtoMessage() {}

func (x *GetReturnedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReturnedRequest.ProtoReflect.Descriptor instead.
func (*GetReturnedRequest) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetReturnedRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetReturnedRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetReturnedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetReturnedResponse) Reset() {
	*x = GetReturnedResponse{}
	mi := &file_order_service_v1_order_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReturnedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReturnedResponse) ProtoMessage() {}

func (x *GetReturnedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_service_v1_order_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReturnedResponse.ProtoReflect.Descriptor instead.
func (*GetReturnedResponse) Descriptor() ([]byte, []int) {
	return file_order_service_v1_order_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetReturnedResponse) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

var File_order_service_v1_order_service_proto protoreflect.FileDescriptor

var file_order_service_v1_order_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x03, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x11, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x73, 0x68,
	0x65, 0x6c, 0x66, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x09, 0x73, 0x68, 0x65, 0x6c,
	0x66, 0x4c, 0x69, 0x66, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x12,
	0x72, 0x10, 0x52, 0x03, 0x62, 0x6f, 0x78, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x52, 0x03, 0x62,
	0x61, 0x67, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a,
	0x05, 0x77, 0x65, 0x69, 0x67, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x05, 0x77, 0x65, 0x69, 0x67, 0x68, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x73,
	0x74, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x15, 0x69, 0x6e,
	0x5f, 0x74, 0x68, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x12,
	0x69, 0x6e, 0x54, 0x68, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x22,
	0x37, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x44, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x6f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x40, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x32, 0xde, 0x0f, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xf5, 0x02, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xb7, 0x02, 0x92, 0x41, 0x9b, 0x02, 0x12, 0x31, 0xd0, 0x9f, 0xd1, 0x80, 0xd0,
	0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb7,
	0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0x20, 0xd0, 0xbe, 0xd1, 0x82, 0x20, 0xd0, 0xba,
	0xd1, 0x83, 0xd1, 0x80, 0xd1, 0x8c, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xb0, 0x1a, 0xe5, 0x01, 0xd0,
	0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1,
	0x82, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84,
	0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0x20, 0xd1, 0x82, 0xd0,
	0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xb0, 0x2c, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0,
	0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0,
	0xbb, 0xd1, 0x8f, 0x2c, 0x20, 0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x87, 0xd0,
	0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb2, 0xd0, 0xbe, 0x20, 0xd0, 0xb4, 0xd0, 0xbd, 0xd0, 0xb5,
	0xd0, 0xb9, 0x20, 0xd1, 0x85, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0,
	0xb8, 0xd1, 0x8f, 0x2c, 0x20, 0xd1, 0x82, 0xd0, 0xb8, 0xd0, 0xbf, 0x20, 0xd1, 0x83, 0xd0, 0xbf,
	0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xba, 0xd0, 0xb8, 0x2c, 0x20, 0xd0, 0xb2,
	0xd0, 0xb5, 0xd1, 0x81, 0x2c, 0x20, 0xd1, 0x86, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x83, 0x20, 0xd0,
	0xb1, 0xd0, 0xb5, 0xd0, 0xb7, 0x20, 0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb5, 0xd1, 0x82, 0xd0, 0xb0,
	0x20, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xbe, 0xd1, 0x81, 0xd1,
	0x82, 0xd0, 0xb8, 0x20, 0xd1, 0x83, 0xd0, 0xbf, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xb2,
	0xd0, 0xba, 0xd0, 0xb8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x64, 0x12, 0xa5, 0x02, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x1a, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdb, 0x01, 0x92, 0x41, 0xb5, 0x01, 0x12, 0x17, 0xd0,
	0x92, 0xd1, 0x8b, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd1, 0x82, 0xd0, 0xbe,
	0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x80, 0x1a, 0x99, 0x01, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xb8, 0xd0,
	0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb8, 0xd0, 0xb4,
	0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0,
	0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd1, 0x8b, 0x20, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0,
	0xb0, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xb2, 0x2c, 0x20, 0xd0, 0xb2, 0xd1, 0x81, 0xd0, 0xb5, 0x20,
	0xd0, 0xbe, 0xd0, 0xbd, 0xd0, 0xb8, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb6, 0xd0,
	0xbd, 0xd1, 0x8b, 0x20, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb0, 0xd0, 0xb4,
	0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb6, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0, 0xbe, 0xd0,
	0xb4, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xbc, 0xd1, 0x83, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb,
	0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb,
	0xd1, 0x8e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x64, 0x12, 0xf1, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x22, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x6f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x92, 0x41, 0x66, 0x12, 0x28, 0xd0, 0x92,
	0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xbd, 0xd1, 0x83, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd1, 0x82, 0xd0,
	0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x80, 0x20, 0xd0, 0xba, 0xd1, 0x83, 0xd1, 0x80, 0xd1, 0x8c,
	0xd0, 0xb5, 0xd1, 0x80, 0xd1, 0x83, 0x1a, 0x3a, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd,
	0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0,
	0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1,
	0x82, 0xd0, 0xbe, 0xd1, 0x80, 0x20, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x80,
	0xd0, 0xb0, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x74, 0x6f,
	0x5f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0xba, 0x03, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf6, 0x02, 0x92,
	0x41, 0xdc, 0x02, 0x12, 0x49, 0xd0, 0x92, 0xd1, 0x8b, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0,
	0xb8, 0xd1, 0x82, 0x20, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x80, 0xd1, 0x8b,
	0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xb2, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xb8,
	0xd0, 0xbc, 0xd0, 0xbe, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb8, 0x20, 0xd0, 0xbe, 0xd1, 0x82, 0x20,
	0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xbe, 0xd1, 0x81, 0xd0, 0xb0, 0x1a, 0x8e,
	0x02, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0,
	0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8,
	0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0x20, 0xd0,
	0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1,
	0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x2c, 0x20, 0xd0, 0xbd, 0xd0, 0xb5, 0xd0, 0xbe, 0xd0,
	0xb1, 0xd1, 0x8f, 0xd0, 0xb7, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0,
	0xbd, 0xd1, 0x8b, 0xd0, 0xb9, 0x20, 0xd1, 0x84, 0xd0, 0xbb, 0xd0, 0xb0, 0xd0, 0xb3, 0x20, 0xd0,
	0xb2, 0xd1, 0x8b, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xb0, 0x20, 0xd0, 0xbf, 0xd0, 0xbe,
	0xd1, 0x81, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb4, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x85, 0x20, 0x6e,
	0x20, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xb2, 0x2c,
	0x20, 0xd0, 0xbd, 0xd0, 0xb5, 0xd0, 0xbe, 0xd0, 0xb1, 0xd1, 0x8f, 0xd0, 0xb7, 0xd0, 0xb0, 0xd1,
	0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd1, 0x8b, 0xd0, 0xb9, 0x20, 0xd1, 0x84,
	0xd0, 0xbb, 0xd0, 0xb0, 0xd0, 0xb3, 0x20, 0xd0, 0xb2, 0xd1, 0x8b, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0,
	0xb4, 0xd0, 0xb0, 0x20, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xbe,
	0xd0, 0xb2, 0x2c, 0x20, 0xd0, 0xba, 0xd0, 0xbe, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd1, 0x8b,
	0xd0, 0xb5, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0xd1, 0x85, 0xd0, 0xbe, 0xd0, 0xb4, 0xd1, 0x8f, 0xd1,
	0x82, 0xd1, 0x81, 0xd1, 0x8f, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xbf, 0xd0, 0xb2, 0xd0, 0xb7, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x86, 0x02, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xbc, 0x01, 0x92, 0x41, 0x96, 0x01, 0x12, 0x23, 0xd0, 0x92, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xbd,
	0xd1, 0x83, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0,
	0xb7, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0x9f, 0xd0, 0x92, 0xd0, 0x97, 0x1a, 0x6f, 0xd0, 0xbf, 0xd1,
	0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20,
	0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8,
	0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0x20, 0xd1, 0x82, 0xd0, 0xbe, 0xd0,
	0xb2, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xb0, 0x2c, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0,
	0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0,
	0xbe, 0xd1, 0x80, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe,
	0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0xf3,
	0x02, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x19,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xac, 0x02, 0x92, 0x41, 0x8e, 0x02, 0x12, 0x39, 0xd0, 0x92,
	0xd1, 0x8b, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xb8, 0xd1, 0x82, 0x20, 0xd1, 0x82, 0xd0,
	0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x80, 0xd1, 0x8b, 0x20, 0xd0, 0xba, 0xd0, 0xbe, 0xd1, 0x82,
	0xd0, 0xbe, 0xd1, 0x80, 0xd1, 0x8b, 0xd0, 0xb5, 0x20, 0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x80, 0xd0,
	0xbd, 0xd1, 0x83, 0xd0, 0xbb, 0xd0, 0xb8, 0x1a, 0xd0, 0x01, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8,
	0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xbd, 0xd0,
	0xb5, 0xd0, 0xbe, 0xd0, 0xb1, 0xd1, 0x8f, 0xd0, 0xb7, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0,
	0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd1, 0x8b, 0xd0, 0xb5, 0x20, 0xd0, 0xbf, 0xd0, 0xb0, 0xd1, 0x80,
	0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x82, 0xd1, 0x80, 0xd1, 0x8b, 0x20, 0xd0, 0xba, 0xd0,
	0xbe, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x87, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb2, 0xd0,
	0xb0, 0x20, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xb2,
	0x2c, 0x20, 0xd0, 0xbd, 0xd0, 0xb5, 0xd0, 0xbe, 0xd0, 0xb1, 0xd1, 0x8f, 0xd0, 0xb7, 0xd0, 0xb0,
	0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd1, 0x8b, 0xd0, 0xb9, 0x20, 0xd0,
	0xbf, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x82, 0xd1, 0x80, 0x20,
	0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x87, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82,
	0xd0, 0xb2, 0xd0, 0xb0, 0x20, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xbf, 0xd1, 0x83, 0xd1,
	0x89, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xbd, 0xd1, 0x8b, 0xd1, 0x85, 0x20, 0xd1, 0x82, 0xd0, 0xbe,
	0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xb2, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x65, 0x64, 0x42, 0xf2, 0x01, 0x92, 0x41, 0x9f, 0x01, 0x12, 0x66, 0x0a, 0x26, 0xd0,
	0x9f, 0xd1, 0x83, 0xd0, 0xbd, 0xd0, 0xba, 0xd1, 0x82, 0x20, 0xd0, 0xb2, 0xd1, 0x8b, 0xd0, 0xb4,
	0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb8, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0,
	0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0x12, 0x35, 0xd0, 0xa1, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xb2, 0xd0,
	0xb8, 0xd1, 0x81, 0x20, 0xd0, 0xb2, 0xd1, 0x8b, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xbd,
	0xd1, 0x8f, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd1, 0x84, 0xd1, 0x83, 0xd0, 0xbd, 0xd0, 0xba, 0xd1,
	0x86, 0xd0, 0xb8, 0xd0, 0xb8, 0x20, 0xd0, 0x9f, 0xd0, 0x92, 0xd0, 0x97, 0x32, 0x05, 0x31, 0x2e,
	0x30, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x37,
	0x30, 0x30, 0x32, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x72, 0x79, 0x73, 0x6b,
	0x61, 0x6c, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x72, 0x79, 0x73, 0x6b, 0x61, 0x6c, 0x2d, 0x6e, 0x69,
	0x6b, 0x69, 0x74, 0x61, 0x2d, 0x68, 0x77, 0x2d, 0x31, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_order_service_v1_order_service_proto_rawDescOnce sync.Once
	file_order_service_v1_order_service_proto_rawDescData = file_order_service_v1_order_service_proto_rawDesc
)

func file_order_service_v1_order_service_proto_rawDescGZIP() []byte {
	file_order_service_v1_order_service_proto_rawDescOnce.Do(func() {
		file_order_service_v1_order_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_service_v1_order_service_proto_rawDescData)
	})
	return file_order_service_v1_order_service_proto_rawDescData
}

var file_order_service_v1_order_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_order_service_v1_order_service_proto_goTypes = []any{
	(*Order)(nil),                        // 0: order.Order
	(*AddOrderRequest)(nil),              // 1: order.AddOrderRequest
	(*AddOrderResponse)(nil),             // 2: order.AddOrderResponse
	(*ListOrdersResponse)(nil),           // 3: order.ListOrdersResponse
	(*ListOrdersRequest)(nil),            // 4: order.ListOrdersRequest
	(*UpdateIssuedRequest)(nil),          // 5: order.UpdateIssuedRequest
	(*UpdateIssuedResponse)(nil),         // 6: order.UpdateIssuedResponse
	(*ReturnOrderToCourierRequest)(nil),  // 7: order.ReturnOrderToCourierRequest
	(*ReturnOrderToCourierResponse)(nil), // 8: order.ReturnOrderToCourierResponse
	(*AcceptReturnRequest)(nil),          // 9: order.AcceptReturnRequest
	(*AcceptReturnResponse)(nil),         // 10: order.AcceptReturnResponse
	(*GetReturnedRequest)(nil),           // 11: order.GetReturnedRequest
	(*GetReturnedResponse)(nil),          // 12: order.GetReturnedResponse
	(*timestamppb.Timestamp)(nil),        // 13: google.protobuf.Timestamp
}
var file_order_service_v1_order_service_proto_depIdxs = []int32{
	13, // 0: order.Order.order_create_date:type_name -> google.protobuf.Timestamp
	13, // 1: order.Order.expiry_date:type_name -> google.protobuf.Timestamp
	13, // 2: order.Order.accept_date:type_name -> google.protobuf.Timestamp
	13, // 3: order.Order.return_from_client:type_name -> google.protobuf.Timestamp
	13, // 4: order.Order.return_to_courier:type_name -> google.protobuf.Timestamp
	0,  // 5: order.ListOrdersResponse.orders:type_name -> order.Order
	0,  // 6: order.GetReturnedResponse.orders:type_name -> order.Order
	1,  // 7: order.OrderService.AddOrder:input_type -> order.AddOrderRequest
	5,  // 8: order.OrderService.UpdateIssued:input_type -> order.UpdateIssuedRequest
	7,  // 9: order.OrderService.ReturnOrderToCourier:input_type -> order.ReturnOrderToCourierRequest
	4,  // 10: order.OrderService.ListOrders:input_type -> order.ListOrdersRequest
	9,  // 11: order.OrderService.AcceptReturn:input_type -> order.AcceptReturnRequest
	11, // 12: order.OrderService.GetReturned:input_type -> order.GetReturnedRequest
	2,  // 13: order.OrderService.AddOrder:output_type -> order.AddOrderResponse
	6,  // 14: order.OrderService.UpdateIssued:output_type -> order.UpdateIssuedResponse
	8,  // 15: order.OrderService.ReturnOrderToCourier:output_type -> order.ReturnOrderToCourierResponse
	3,  // 16: order.OrderService.ListOrders:output_type -> order.ListOrdersResponse
	10, // 17: order.OrderService.AcceptReturn:output_type -> order.AcceptReturnResponse
	12, // 18: order.OrderService.GetReturned:output_type -> order.GetReturnedResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_order_service_v1_order_service_proto_init() }
func file_order_service_v1_order_service_proto_init() {
	if File_order_service_v1_order_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_service_v1_order_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_service_v1_order_service_proto_goTypes,
		DependencyIndexes: file_order_service_v1_order_service_proto_depIdxs,
		MessageInfos:      file_order_service_v1_order_service_proto_msgTypes,
	}.Build()
	File_order_service_v1_order_service_proto = out.File
	file_order_service_v1_order_service_proto_rawDesc = nil
	file_order_service_v1_order_service_proto_goTypes = nil
	file_order_service_v1_order_service_proto_depIdxs = nil
}
